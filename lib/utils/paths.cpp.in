/*
 * Copyright (c) 2016 Nicholas Corgan (n.corgan@gmail.com)
 *
 * Distributed under the MIT License (MIT) (See accompanying file LICENSE.txt
 * or copy at http://opensource.org/licenses/MIT)
 */

#include "env.hpp"

#include <pkmn/utils/paths.hpp>

namespace pkmn {

    // TODO: implement when SQLite brought in
    std::string get_database_path() {
        return "";
    }

    std::string get_images_dir() {
        std::string env_var = pkmn_getenv("PKMN_IMAGES_DIR");
        if(env_var.size() > 0) {
            return env_var;
        }

#ifdef PKMN_PLATFORM_WIN32
        std::string cmake_default = "@CMAKE_INSTALL_PREFIX@\\@PKG_DATA_DIR@\\images";
#else
        std::string cmake_default = "@CMAKE_INSTALL_PREFIX@/@PKG_DATA_DIR@/images";
#endif

        return cmake_default;
    }

    // TODO: implement
    std::string get_tmp_dir() {
        return "/tmp";
    }
}
